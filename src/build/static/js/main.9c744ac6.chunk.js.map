{"version":3,"sources":["images/logo_Coronado.svg","TopNav.js","images/youtube_logo.svg","images/facebook_logo.svg","Footer.js","images/penta1.svg","pages/HomePage.js","components/HimnosLista.js","components/PresentacionLista.js","components/VistaHimno.js","images/engranajes.svg","images/bg.jpg","images/oraciones.jpg","images/bienvenida.jpg","images/anuncios.jpg","components/OtrosElementosLista.js","pages/CrearPage.js","images/agregar_image.svg","pages/AgregarPage.js","images/edit_image.svg","pages/ModificarPage.js","pages/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["TopNav","state","isActive","handleToggle","setState","this","Fragment","className","id","onClick","src","mainLogo","alt","to","exact","Component","Footer","youtube_logo","facebook_logo","HomePage","penta1","HimnosLista","props","numberOfPages","Math","ceil","himnos","length","useState","pageNumber","setPageNumber","useEffect","map","himno","index","selected","Titulo","verHimno","Id","agregarHimno","console","log","PresentacionLista","presentacion","key","tipo","bajarHimno","subirHimno","eliminarHimno","VistaHimno","titulo","Himno_Id","Numero_estrofa","Contenido","estrofas","setEstrofas","a","fetch","method","headers","result","json","body","fetchData","estrofa","contenido","replace","dangerouslySetInnerHTML","__html","OtrosElementosLista","forwardRef","ref","otrosElementos","elemento","agregarElemento","url","CrearPage","refContainer","useRef","refBorrarTermino","otrosButton","refOtrosElementos","createRef","busqueda","setBusqueda","Cantidad_estrofas","setHimnos","setTitulo","setID","buscarContenido","setBuscarContenido","bienvenida","anuncios","setOtrosElementos","setPresentacion","compararListas","lista","forEach","fila","himnoIndex","findIndex","toggleView","event","target","current","classList","toggle","contains","remove","engranajes","onSubmit","preventDefault","estrofasId","Set","i","add","idArray","Array","from","type","name","placeholder","value","onChange","termino","isChecked","checked","selected_id","selected_titulo","selectedHimnoIndex","himnosCopy","updatedHimno","newHimno","updatedPresentacion","concat","nuevaPresentacion","pptxgen","author","subject","title","fetchArray","push","Promise","all","then","responses","response","contenidoHimnos","himnosIndex","slide","addSlide","background","path","oracionesBg","addText","x","y","h","w","color","fontSize","bold","align","AlignH","center","estrofaBg","left","estrofaFontSize","cantidadLineas","split","isTextBox","shrinkText","autofit","writeFile","fileName","catch","error","elementsCopy","selectedElementIndex","updatedElement","selected_tipo","selected_url","newElement","currentObject","filter","object","splice","AgregarPage","agregar_image","ModificarPage","edit_image","NotFoundPage","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c744ac6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_Coronado.711a70b2.svg\";","import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport mainLogo from './images/logo_Coronado.svg';\n\nclass TopNav extends Component {\n\n    state = { isActive: false };\n\n    handleToggle = () => {\n        this.setState({ isActive: !this.state.isActive });\n    };\n\n    render() {\n        const isActive = this.state.isActive;\n        return (\n\n            <React.Fragment>\n                <div className=\"topBar\"><div id=\"menu-bars\" onClick={this.handleToggle}></div></div>\n                <nav className=\"no-mobile\">\n                    <img className=\"logo\" src={mainLogo} alt=\"Logo Iglesia de Cristo en Coronado\" />\n                    <ul>\n                        <li>\n                            <NavLink to=\"/\" exact>\n                                Inicio\n                                <div className=\"active-line\"></div>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/crear\">\n                                Crear\n                                <div className=\"active-line\"></div>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/agregar\">\n                                Agregar\n                                <div className=\"active-line\"></div>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/modificar\">\n                                Modificar\n                                <div className=\"active-line\"></div>\n                            </NavLink>\n                        </li>\n                    </ul>\n                </nav>\n                <nav className=\"navMobile\">\n                    <ul className={isActive ? \"active\" : \"\"}>\n                        <li>\n                            <NavLink to=\"/\" exact>\n                                Inicio\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/crear\">\n                                Crear\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/agregar\">\n                                Agregar\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/modificar\">\n                                Modificar\n                            </NavLink>\n                        </li>\n                    </ul>\n                    <img className=\"logo\" src={mainLogo} alt=\"Logo Iglesia de Cristo en Coronado\" />\n                </nav>\n            </React.Fragment>  \n        );\n    } \n}\n\nexport default TopNav;","export default __webpack_public_path__ + \"static/media/youtube_logo.88cd0fb3.svg\";","export default __webpack_public_path__ + \"static/media/facebook_logo.093b74e6.svg\";","import React, { Component } from \"react\";\nimport youtube_logo from './images/youtube_logo.svg';\nimport facebook_logo from './images/facebook_logo.svg';\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <footer>\n                    <p>Iglesia de Cristo en Coronado, Costa Rica.</p>\n                    <img id=\"youtube_logo\" className=\"footer_logo\" src={youtube_logo} alt=\"Logo de Youtube\"/>\n                    <img id=\"facebook_logo\" className=\"footer_logo\" src={facebook_logo} alt=\"Logo de Facebook\"/>\n                </footer>\n            </React.Fragment>  \n        );\n    } \n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/penta1.4e1bfc44.svg\";","import React from 'react';\nimport penta1 from '../images/penta1.svg';\nconst HomePage = () => (\n    <React.Fragment>\n        <main className=\"mainContainer\">\n            <header>\n                <img id=\"penta1\" src={penta1} alt=\"imagen pentagrama y notas musicales\" />\n                <h1>CREACIÓN DE PRESENTACIONES DE CANTOS</h1>\n                <h3>¡Ahórrese horas de trabajo, termine en unos cuantos clicks!</h3>\n            </header>\n            <div className=\"columnsContainer\">\n                <div className=\"column column1\">\n                    <section>\n                        <h2>Cientos de cantos disponibles</h2>\n                        <p>Se han agregado muchos cantos de diferentes himnarios y muchos cantos nuevos que se han aprendido aprendido a lo largo del tiempo.<br/>Con esta herramienta se puede elegir en una larga lista y crear presentaciones fácilmente en un instante.</p>\n                    </section>\n                    <section>\n                        <h2>Agregar cantos nuevos</h2>\n                        <p>Si no se encuentra algún canto existe la posibilidad de agregarlo, una vez agregado un canto este estará disponible para todos los usuarios que quieran utilizarlo en sus presentaciones.</p>\n                    </section>\n                </div>\n                <div className=\"column column2\">\n                    <section>\n                        <h2>Modificar cantos existentes</h2>\n                        <p>Muchas veces quienes agregamos cantos nos equivocamos pero para esos errores que encontremos también está la posibilidad de modificar cualquier canto existente.</p>\n                        <div id=\"penta2\"></div>\n                    </section>\n                </div>\n            </div>\n        </main>\n    </React.Fragment>   \n);\n\nexport default HomePage;","import React, { useState, useEffect } from 'react';\n\nconst HimnosLista = (props) => {\n    const maxPerPage = 16;\n    const numberOfPages = Math.ceil(props.himnos.length / maxPerPage);\n    const [pageNumber, setPageNumber] = useState(1);\n\n\n    const next = () => {\n        console.log('next');\n        if(pageNumber < numberOfPages){\n            setPageNumber(pageNumber + 1);\n        }\n    }\n\n    const prev = () => {\n        console.log('prev');\n        if(pageNumber > 1){\n            setPageNumber(pageNumber - 1);\n        }\n    }\n\n    useEffect(() => {\n        setPageNumber(1);\n    }, [numberOfPages])\n\n    return(\n        <>\n            <div id=\"lista-cantos\">\n                {props.himnos.map((himno, index) => {\n                    if(index >= (maxPerPage * pageNumber - maxPerPage) && index < (maxPerPage * pageNumber)){\n                        return(\n                            <div className={\"titulo-container\" + ((himno.selected)? \" titulo-selected\" : \"\")} key={index}>\n                                <div className=\"titulo\">\n                                    <h4>{himno.Titulo}</h4>\n                                </div>\n                                <div className=\"iconos\">\n                                    <i className=\"icono icono-ver\" onClick={() => props.verHimno(himno.Id,himno.Titulo)}></i>\n                                    <i className={\"icono icono-agregar\" + ((himno.selected)? \" icono-selected\" : \"\")} onClick={() => props.agregarHimno(himno.Id,himno.Titulo)}></i>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        return(<div key={index}></div>);\n                    }\n                })}\n                <div id=\"paginas\">\n                    <div id=\"flecha-anterior\" ><i className=\"icono icono-abajo\" onClick={prev}></i></div><h3>Página {pageNumber}/{numberOfPages}</h3><div id=\"flecha-siguiente\"><i className=\"icono icono-abajo\" onClick={next}></i></div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HimnosLista;","import React from 'react';\n\nconst PresentacionLista = (props) => {\n\n    return(\n        <>\n        <div id=\"presentacion-cantos\">\n        {props.presentacion.map((himno, key) => (\n            <div className={\"titulo-container\" + ((himno.tipo)? \" \"+himno.tipo : \"\")} key={key}>\n                <div className=\"titulo\">\n                    <h4>{himno.Titulo}</h4>\n                </div>\n                <div className=\"iconos\">\n                    <i className=\"icono icono-abajo\" onClick={() => props.bajarHimno(himno.Id)}></i>\n                    <i className=\"icono icono-arriba\" onClick={() => props.subirHimno(himno.Id)}></i>\n                    <i className=\"icono icono-cerrar\" onClick={() => props.eliminarHimno(himno.Id)}></i>\n                </div>\n            </div>\n        ))}\n        </div>\n        </>\n    );\n};\n\nexport default PresentacionLista;","import React, { useState, useEffect} from 'react';\n\nconst VistaHimno = ({ titulo, id }) => {\n\n    const [estrofas, setEstrofas] = useState([{ Himno_Id: 1, Numero_estrofa: 1, Contenido: \"\" }]);\n    \n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('/api/obtenerestrofas?id='+id, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n            const body = await result.json();\n            setEstrofas(body);\n        }\n        fetchData();\n    }, [id]);\n\n\n    return(\n        <div className=\"preview-container\">\n            <h1 id=\"titulo-canto\">{titulo}</h1>\n            {estrofas.map((estrofa, key) => { \n                var contenido = (estrofa.Contenido.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'));\n                return(\n                <div className=\"estrofa\" key={key} dangerouslySetInnerHTML={{__html: contenido}}>\n                </div>\n            )})}\n            <i id=\"close-preview\" className=\"icono icono-cerrar\"></i>\n        </div>\n    );\n};\n\nexport default VistaHimno;","export default __webpack_public_path__ + \"static/media/engranajes.cd2fbc6a.svg\";","export default __webpack_public_path__ + \"static/media/bg.f3c89965.jpg\";","export default __webpack_public_path__ + \"static/media/oraciones.f14a4c4f.jpg\";","export default __webpack_public_path__ + \"static/media/bienvenida.f9810c9a.jpg\";","export default __webpack_public_path__ + \"static/media/anuncios.f56f7a1d.jpg\";","import React, { forwardRef } from 'react';\n\nconst OtrosElementosLista = forwardRef((props, ref) => {\n    return(\n        <>\n        <div ref={ref} id=\"lista-elementos\">\n        {props.otrosElementos.map((elemento, key) => (\n            <div className={\"titulo-container\" + ((elemento.selected)? \" titulo-selected\" : \"\")} key={key} onClick={() => props.agregarElemento(elemento.Id,elemento.Titulo,elemento.tipo,elemento.url)}>\n                <div className=\"titulo\">\n                    <h4>{elemento.Titulo}</h4>\n                </div>\n                <div className=\"iconos-ele\">\n                    <i className={\"icono icono-agregar\" + ((elemento.selected)? \" icono-selected\" : \"\")}></i>\n                </div>\n            </div>\n        ))}\n        </div>\n        </>\n    );\n});\n\nexport default OtrosElementosLista;","import React, { useState, useEffect, useRef, createRef} from 'react';\nimport pptxgen from \"pptxgenjs\";\nimport HimnosLista from '../components/HimnosLista';\nimport PresentacionLista from '../components/PresentacionLista';\nimport VistaHimno from '../components/VistaHimno';\nimport engranajes from '../images/engranajes.svg';\nimport estrofaBg from '../images/bg.jpg';\nimport oracionesBg from '../images/oraciones.jpg';\nimport bienvenida from '../images/bienvenida.jpg';\nimport anuncios from '../images/anuncios.jpg';\nimport OtrosElementosLista from '../components/OtrosElementosLista';\n\nconst CrearPage = () => {\n    const refContainer = useRef();\n    const refBorrarTermino = useRef();\n    const otrosButton = useRef();\n    const refOtrosElementos = createRef();\n    const [busqueda, setBusqueda] = useState(\"\");\n    const [himnos, setHimnos] = useState([{ Id: 0, Titulo: \"\", Cantidad_estrofas: 0, selected: false }]);\n    const [titulo, setTitulo] = useState(\"\");\n    const [id, setID] = useState(1);\n    const [buscarContenido, setBuscarContenido] = useState(false);\n    const [otrosElementos, setOtrosElementos] = useState([\n        {tipo: \"imagen\", Titulo: \"Bienvenida\", Id: \"i1\", url: bienvenida},\n        {tipo: \"oracion\", Titulo:\"Oración Inicial\", Id: \"o1\"},\n        {tipo: \"oracion\", Titulo:\"Cena\", Id: \"o2\"},\n        {tipo: \"oracion\", Titulo:\"Ofrenda\", Id: \"o3\"},\n        {tipo: \"oracion\", Titulo:\"Predicación\", Id: \"p1\"},\n        {tipo: \"oracion\", Titulo:\"Oración Final\", Id: \"o4\"},\n        {tipo: \"imagen\", Titulo: \"Anuncios\", Id: \"i2\", url: anuncios}]);\n    const [presentacion, setPresentacion] = useState([]);\n\n    const compararListas = (lista) => {\n        console.log(\"comparando listas...\");\n        presentacion.forEach((fila) => {\n            let himnoIndex = lista.findIndex(himno => himno.Id === fila.Id);\n            if(himnoIndex !== -1)lista[himnoIndex].selected = true; \n        });\n        return lista;\n    }\n\n    const buscarHimno = (event) => {\n        event.preventDefault();\n        //Buscar solo en los títulos de los himnos.\n        if(!buscarContenido){\n            if(busqueda.length > 0){\n                const fetchData = async () => {\n                    const result = await fetch('api/buscartitulos?term='+ busqueda, {\n                        method: 'get',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        }\n                    });\n                    const body = await result.json();\n                    setHimnos(compararListas(body));\n                }\n                fetchData();\n            //Si no hay nada en el campo buscar entonces se devuelven \n            //todos los himnos que existen en la Base de datos.\n            } else {\n                const fetchData = async () => {\n                    const result = await fetch('api/himnos');\n                    const body = await result.json();\n                    setHimnos(compararListas(body));\n                }\n                fetchData();\n            }\n        //Buscar en los títulos de los himnos y también en la letra.\n        } else {\n            const estrofasId = new Set();\n            let url = \"\";\n            const fetchData = async () => {\n                const result = await fetch('/api/buscarenestrofas?term='+ busqueda, {\n                    method: 'get',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                });\n                const body = await result.json();\n                for(var i=0; i < body.length; i++){\n                    estrofasId.add(body[i].Himno_Id);\n                }\n                let idArray = Array.from(estrofasId);\n                for(i = 0; i < idArray.length; i++){\n                    url+= \"&array[]=\" + idArray[i];\n                }\n\n                const fetchData = async () => {\n                    const result = await fetch('api/buscarencontenido?term='+ busqueda + url, {\n                        method: 'get',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        }\n                    });\n                    const body = await result.json();\n                    setHimnos(compararListas(body));\n                }\n                fetchData();\n            }\n            fetchData();\n        }\n    }\n\n    const checkboxChange = (event) => {\n        let isChecked = event.target.checked;\n        setBuscarContenido(isChecked);\n    }\n\n    const busquedaChange = (event) => {\n        const termino = event.target.value;\n        setBusqueda(termino)\n        if(termino.length > 0){\n            refBorrarTermino.current.classList.add('visible');\n        } else {\n            refBorrarTermino.current.classList.remove('visible');\n        }\n        \n    }\n\n    const borrarBusqueda = () => {\n        setBusqueda(\"\");\n        refBorrarTermino.current.classList.remove('visible');\n        const fetchData = async () => {\n            const result = await fetch('api/himnos');\n            const body = await result.json();\n            setHimnos(compararListas(body));\n        }\n        fetchData();\n    }\n    \n    const verHimno = (selected_id,selected_titulo) => {\n        setID(selected_id);\n        setTitulo(selected_titulo);\n        toggleView();\n    } \n\n    const agregarHimno = (selected_id,selected_titulo) => {\n        let selectedHimnoIndex = himnos.findIndex(himno => himno.Id === selected_id);\n        let himnosCopy = [...himnos];\n        let updatedHimno = {...himnosCopy[selectedHimnoIndex]};\n        \n        if(!updatedHimno.selected){\n            updatedHimno.selected = true;\n            himnosCopy[selectedHimnoIndex] = updatedHimno;\n            setHimnos(himnosCopy);\n\n            let newHimno = [{ Id: selected_id, Titulo: selected_titulo}];\n            let currentPresentacion = [...presentacion];\n            const updatedPresentacion = currentPresentacion.concat(newHimno);\n            setPresentacion(updatedPresentacion);\n        }\n    }\n\n    const agregarElemento = (selected_id, selected_titulo, selected_tipo, selected_url) => {\n        let selectedElementIndex = otrosElementos.findIndex(elemento => elemento.Id === selected_id);\n        let elementsCopy = [...otrosElementos];\n        let updatedElement = {...elementsCopy[selectedElementIndex]};\n        let newElement =[{ Id: selected_id, Titulo: selected_titulo, tipo: selected_tipo, url:selected_url}];;\n        \n        if(!updatedElement.selected){\n            updatedElement.selected = true;\n            elementsCopy[selectedElementIndex] = updatedElement;\n            setOtrosElementos(elementsCopy);\n            \n            let currentPresentacion = [...presentacion];\n            const updatedPresentacion = currentPresentacion.concat(newElement);\n            setPresentacion(updatedPresentacion);\n        }\n    }\n\n    const bajarHimno = (selected_id) => {\n        let selectedHimnoIndex = presentacion.findIndex(himno => himno.Id === selected_id);\n        if(selectedHimnoIndex < (presentacion.length -1)){\n            let currentObject = presentacion[selectedHimnoIndex];\n            let updatedPresentacion = presentacion.filter( object => object.Id !== selected_id);\n            updatedPresentacion.splice(selectedHimnoIndex + 1, 0, currentObject)\n            setPresentacion(updatedPresentacion);\n        }\n    }\n    const subirHimno = (selected_id) => {\n        let selectedHimnoIndex = presentacion.findIndex(himno => himno.Id === selected_id);\n        if(selectedHimnoIndex > 0){\n            let currentObject = presentacion[selectedHimnoIndex];\n            let updatedPresentacion = presentacion.filter( object => object.Id !== selected_id);\n            updatedPresentacion.splice(selectedHimnoIndex - 1, 0, currentObject)\n            setPresentacion(updatedPresentacion);\n        }\n    }\n    const eliminarHimno = (selected_id) => {\n        let updatedPresentacion = presentacion.filter( object => object.Id !== selected_id);\n        setPresentacion(updatedPresentacion);\n\n        let selectedHimnoIndex = himnos.findIndex(himno => himno.Id === selected_id);\n        let himnosCopy = [...himnos];\n        let updatedHimno = {...himnosCopy[selectedHimnoIndex]};\n        updatedHimno.selected = false;\n        himnosCopy[selectedHimnoIndex] = updatedHimno;\n        setHimnos(himnosCopy);\n\n        let selectedElementIndex = otrosElementos.findIndex(elemento => elemento.Id === selected_id);\n        let elementsCopy = [...otrosElementos];\n        let updatedElement = {...elementsCopy[selectedElementIndex]};\n        updatedElement.selected = false;\n        elementsCopy[selectedElementIndex] = updatedElement;\n        setOtrosElementos(elementsCopy);\n    }\n\n    const toggleView = (event) => {\n        if(!event) {\n            refContainer.current.classList.toggle('visible');\n        } else if(event.target.id === \"himno-overlay\" || event.target.id === \"close-preview\"){\n            refContainer.current.classList.toggle('visible');\n        }\n    }\n\n    const borrarPresentacion = () => {\n        let himnosCopy = [...himnos];\n        let elementsCopy = [...otrosElementos];\n        presentacion.forEach((fila) => {\n            if(!fila.tipo){\n                let selectedHimnoIndex = himnos.findIndex(himno => himno.Id === fila.Id);\n                let updatedHimno = {...himnosCopy[selectedHimnoIndex]};\n                updatedHimno.selected = false;\n                himnosCopy[selectedHimnoIndex] = updatedHimno;\n            } else {\n                let selectedElementIndex = otrosElementos.findIndex(elemento => elemento.Id === fila.Id);\n                let updatedElement = {...elementsCopy[selectedElementIndex]};\n                updatedElement.selected = false;\n                elementsCopy[selectedElementIndex] = updatedElement;\n            }\n        });\n        setOtrosElementos(elementsCopy);\n        setHimnos(himnosCopy);\n        setPresentacion([]);\n    }\n\n    const crearPresentacion = () => {\n        if(presentacion.length > 0){\n            let nuevaPresentacion = new pptxgen();\n            nuevaPresentacion.author = 'Creador de presentaciones';\n            nuevaPresentacion.subject = 'Presentación de cantos';\n            nuevaPresentacion.title = 'Presentación de cantos';\n            let fetchArray = [];\n            for(let i = 0; i < presentacion.length; i++){\n                if(! presentacion[i].tipo)\n                fetchArray.push(fetch('api/obtenerestrofas?id=' + presentacion[i].Id));\n            }\n            Promise.all(fetchArray)\n            .then((responses) => {\n                return Promise.all(responses.map((response) => {\n                    return response.json();\n                }));\n            })\n            .then((contenidoHimnos) => {\n                let himnosIndex = 0;\n                presentacion.forEach((fila, index) => {\n                    let slide = nuevaPresentacion.addSlide();\n                    if(!fila.tipo){\n                        slide.background = { path : oracionesBg};\n                        slide.addText(\n                            fila.Titulo,\n                            {\n                                x: 0,\n                                y: 1.51,\n                                h: 2.61,\n                                w: \"100%\",\n                                color: 'FFFFFF',\n                                fontSize: 60,\n                                bold: true,\n                                align: nuevaPresentacion.AlignH.center\n                            }\n                        );\n                        let himno = contenidoHimnos[himnosIndex];\n                        himno.forEach( (estrofa, i) => {\n                            slide = nuevaPresentacion.addSlide();\n                            slide.background = { color : \"000000\"};\n                            slide.background = { path : estrofaBg};\n                            slide.addText(\n                                estrofa.Numero_estrofa,\n                                {\n                                    x: 0.08,\n                                    y: 0,\n                                    w: 0.5,\n                                    h: 0.5,\n                                    color: 'FFFFFF',\n                                    align: nuevaPresentacion.AlignH.left\n                                }\n                            );\n                            let estrofaFontSize = 50;\n                            let contenido = estrofa.Contenido.replace(/[\\r\\n]+$/, '');\n                            let cantidadLineas = contenido.split(/\\r\\n|\\r|\\n/).length;\n                            if(cantidadLineas >= 6 && cantidadLineas < 8) estrofaFontSize = 46;\n                            else if(cantidadLineas > 7 ) estrofaFontSize = 40;\n                            else estrofaFontSize = 50;\n                            slide.addText(\n                                contenido,\n                                {\n                                    isTextBox: true,\n                                    shrinkText: true,\n                                    autofit: true,\n                                    x: 0,\n                                    y: 0,\n                                    w: \"100%\",\n                                    h: \"100%\",\n                                    fontSize: estrofaFontSize,\n                                    color: 'FFFFFF',\n                                    align: nuevaPresentacion.AlignH.center\n                                }\n                            );\n                            if(i === himno.length - 1){\n                                slide.addText(\n                                    \"Fin\",\n                                    {\n                                        x: 9.42,\n                                        y: 5.145,\n                                        w: 0.54,\n                                        h: 0.42,\n                                        color: 'FFFFFF',\n                                        align: nuevaPresentacion.AlignH.left\n                                    }\n                                );\n                            }\n                        });\n                        himnosIndex += 1;\n                    } else if(fila.tipo === \"oracion\"){\n                        slide.background = { path : oracionesBg};\n                        slide.addText(\n                            fila.Titulo,\n                            {\n                                x: 0,\n                                y: 1.51,\n                                h: 2.61,\n                                w: \"100%\",\n                                color: 'FFFFFF',\n                                fontSize: 60,\n                                bold: true,\n                                align: nuevaPresentacion.AlignH.center\n                            }\n                        );\n                    } else if(fila.tipo === \"imagen\"){\n                        if(fila.Titulo === \"Bienvenida\")\n                            slide.background = { path : bienvenida};\n                        else \n                        slide.background = { path : anuncios};\n                    }\n                });\n                nuevaPresentacion.writeFile({fileName: \"Presentacion de prueba.pptx\"});\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n        }\n    }\n\n    const ocultarMostrarListaElementos = () => {\n        refOtrosElementos.current.classList.toggle('visible');\n    }\n  \n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('api/himnos');\n            const body = await result.json();\n            setHimnos(body);\n        }\n        fetchData();\n\n    }, []);\n\n    const checkClickArea = (event) => {\n        //console.log\n        if (!refOtrosElementos.current.contains(event.target) && !otrosButton.current.contains(event.target)){\n            refOtrosElementos.current.classList.remove('visible');\n        } \n    }\n\n    return(\n        <React.Fragment>\n            <main id=\"crearContainer\" className=\"mainContainer\" onClick={checkClickArea}>\n                <header className=\"two-columns\">\n                    <div className=\"header-left\">\n                        <h1>CREAR UNA PRESENTACIÓN NUEVA</h1>\n                        <h3>Elija los cantos de la lista situada a la izquierda para ser agregados a la nueva presentación. Los himnos seleccionados se desplegarán en la lista que está al lado derecho.</h3>\n                    </div>\n                    <div className=\"header-right\">\n                        <img id=\"engranajes\" className=\"image-header\" src={engranajes} alt=\"\" />\n                    </div>    \n                </header>\n                <div className=\"linea-divisoria\"></div>\n                <div className=\"columnsContainer\">\n                    <div className=\"column column1\">\n                        <section>\n                            <h2>Lista de cantos disponibles</h2>\n                            <form onSubmit={buscarHimno}>\n                                <div id=\"buscar-container\">\n                                    <button type=\"submit\"><i className=\"icono icono-buscar\"></i></button>\n                                    <input type=\"text\" name=\"search\" placeholder=\"Buscar Canto\" value={busqueda} onChange={busquedaChange}/>\n                                    <div onClick={borrarBusqueda}><i id=\"borrar-termino\" className=\"icono icono-cerrar\" ref={refBorrarTermino}></i></div>\n                                </div>\n                                <label>\n                                Buscar en contenido <input type=\"checkbox\" onChange={checkboxChange}/>\n                                </label>\n                            </form>\n                            <HimnosLista himnos={himnos} verHimno={verHimno} agregarHimno={agregarHimno}/>\n                        </section>\n                    </div>\n                    <div className=\"column column2\">\n                        <section>\n                            <h2>Lista de elementos en la presentación</h2>\n                            <div id=\"iconos-presentacion\">\n                                <i ref={otrosButton} className=\"icono icono-crear\" onClick={ocultarMostrarListaElementos}></i>\n                                <i className=\"icono icono-descargar\" onClick={crearPresentacion}></i>\n                                <i className=\"icono icono-borrar-todo\" onClick={borrarPresentacion}></i>\n                            </div>\n                            <OtrosElementosLista ref={refOtrosElementos} otrosElementos={otrosElementos} agregarElemento={agregarElemento}/>\n                            <PresentacionLista presentacion={presentacion} bajarHimno={bajarHimno} subirHimno={subirHimno} eliminarHimno={eliminarHimno}/>\n                        </section>\n                    </div>\n                </div>\n                <div ref={refContainer} id=\"himno-overlay\" onClick={toggleView}>\n                    <VistaHimno titulo={titulo} id={id}/>\n                </div>\n                \n            </main>\n        </React.Fragment>   \n    );\n};\n\nexport default CrearPage;","export default __webpack_public_path__ + \"static/media/agregar_image.555e06bf.svg\";","import React from 'react';\nimport agregar_image from '../images/agregar_image.svg';\nconst AgregarPage = () => (\n        <React.Fragment>\n         <main id=\"agregarContainer\" className=\"mainContainer\">\n            <header className=\"two-columns\">\n                <div className=\"header-left\">\n                    <h1>Agregar Cantos Nuevos</h1>\n                    <h3>Agregue el título y la letra de cada canto dividido por diapositivas. Agregue o remueva diapositivas tanto como sea necesario.</h3>\n                </div>\n                <div className=\"header-right\">\n                    <img id=\"engranajes\" className=\"image-header\" src={agregar_image} alt=\"\" />\n                </div>    \n            </header>\n            <div className=\"columnsContainer\">\n                <div className=\"column column1\">\n                </div>\n                <div className=\"column column2\">\n                </div>\n            </div>\n        </main>\n    </React.Fragment>   \n    \n);\n\nexport default AgregarPage;","export default __webpack_public_path__ + \"static/media/edit_image.d4c1872c.svg\";","import React from 'react';\nimport edit_image from '../images/edit_image.svg';\nconst ModificarPage = () => (\n    <React.Fragment>\n        <main id=\"modificarContainer\" className=\"mainContainer\">\n            <header className=\"two-columns\">\n                <div className=\"header-left\">\n                    <h1>Modificar cantos existentes</h1>\n                    <h3>Podemos modificar el título o la letra de cualquier canto que ya existe.</h3>\n                </div>\n                <div className=\"header-right\">\n                    <img id=\"edit_image\" className=\"image-header\" src={edit_image} alt=\"\" />\n                </div>    \n            </header>\n            <div className=\"columnsContainer\">\n                <div className=\"column column1\">\n                </div>\n                <div className=\"column column2\">\n                </div>\n            </div>\n        </main>\n    </React.Fragment>   \n);\n\nexport default ModificarPage;","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: La página no se encuentra.</h1>\n);\n\nexport default NotFoundPage;","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport TopNav from './TopNav';\nimport Footer from './Footer';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport CrearPage from './pages/CrearPage';\nimport AgregarPage from './pages/AgregarPage';\nimport ModificarPage from './pages/ModificarPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <TopNav />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/crear\" component={CrearPage} />\n            <Route path=\"/agregar\" component={AgregarPage} />\n            <Route path=\"/modificar\" component={ModificarPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}